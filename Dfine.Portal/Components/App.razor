@using ECSM.Models.DTO
@using ECSM.Services.SettingsService
@inject ISettingsService SettingsService

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <base href="/" />
  <link rel="stylesheet" href="ECSM.Portal.styles.css" />
  <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
  <link rel="stylesheet" href="app.css" />
  <link rel="icon" type="image/png" href="favicon.png" />
  <link rel="stylesheet" href="_content/Telerik.UI.for.Blazor/css/kendo-theme-default/all.css" />
  <link href="https://fonts.cdnfonts.com/css/futura-std-4?styles=52579,52565,52573" rel="stylesheet">
  <link href="https://fonts.cdnfonts.com/css/futura-std-4?styles=52567,52568,52574,52581,52575,52582,52570,52583,52576,52584,52579,52580,52565,52571,52566,52572,52573,52577,52569,52578" rel="stylesheet">
  <script src="_content/Telerik.UI.for.Blazor/js/telerik-blazor.js"></script>
  <HeadOutlet @rendermode="InteractiveServer" />
  <style>
    :root {
      --primary-font-family: @FontFamilyPrimary;
      --secondary-font-family: @FontFamilySecondary;

      --primary-color: @PrimaryColor;
      --secondary-color: @SecondaryColor;
      --tertiary-color: #00954B;
      --quaternary-color: #666;

      --white: #FFFFFF;

      --Primary-font-color: pink;
      --secondary-font-color: pink;
      --tertiary-font-color: pink;

      --primary-font-size: 18px;
      --secondary-font-size: 16px;
      --tertiary-font-size: 14px;
      --quaternary-font-size: 12px; 

      --primary-font-weight: 700;
      --secondary-font-weight: 400;

      --welcome-paragraph-font-size: 20px;
      --paragraph-font-size: 16px;
      --h4-padding-bottom: 0px;
      --material-icon-font-size: 30px;
    }
  </style>
</head>

<body>
<Routes @rendermode="InteractiveServer" />
<script src="site.js"></script>
<script src="_framework/blazor.web.js"></script>
</body>

</html>

@code {
  public string PrimaryColor { get; set; }
  public string SecondaryColor { get; set; }
  public string FontFamilyPrimary { get; set; }
  public string FontFamilySecondary { get; set; }

  protected override async Task OnInitializedAsync()
  {
    SettingsDTO = await SettingsService.GetAllSetting();

    if (SettingsDTO.Count > 0)
    {
      PrimaryColor = SettingsDTO.FirstOrDefault(c => c.Name == "ColorPrimary")?.Value ?? "pink";
      SecondaryColor = SettingsDTO.FirstOrDefault(c => c.Name == "ColorSecondary")?.Value ?? "pink";
      FontFamilyPrimary = SettingsDTO.FirstOrDefault(c => c.Name == "FontFamilyPrimary")?.Value ?? "";
      FontFamilySecondary = SettingsDTO.FirstOrDefault(c => c.Name == "FontFamilySecondary")?.Value ?? "";
    }

    await base.OnInitializedAsync();
  }

  public List<SettingsDTO> SettingsDTO { get; set; }

}
